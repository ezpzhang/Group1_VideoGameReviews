"0","predict.rf.y <- predict(fit.rf.train, newdata=data.test)   # labels"
"0","predict.rf <- predict(fit.rf.train, newdata=data.test, type=""prob"")  #probabilities"
"0","# Testing errors"
"0","rf.test.err <- mean(data.test$judgment != predict.rf.y)   # didn't set a seed to split the train/test"
"0",""
"0","# Testing ROC curve"
"0","roc(data.test$judgment, predict.rf[,2], plot=TRUE)  # Ok"
"2","Setting levels: control = 0, case = 1
"
"2","Setting direction: controls < cases
"
"1","
Call:
"
"1",""
"1","roc.default(response = data.test$judgment, predictor = predict.rf[, "
"1",""
"1","    2], plot = TRUE)"
"1",""
"1","

"
"1","Data: "
"1",""
"1","predict.rf[, 2]"
"1",""
"1"," in "
"1",""
"1","641"
"1",""
"1"," controls ("
"1",""
"1","data.test$judgment"
"1",""
"1"," "
"1",""
"1","0"
"1",""
"1",") "
"1",""
"1","<"
"1",""
"1"," "
"1",""
"1","359"
"1",""
"1"," cases ("
"1",""
"1","data.test$judgment"
"1",""
"1"," "
"1",""
"1","1"
"1",""
"1",").
"
"1","Area under the curve: "
"1",""
"1","0.912"
"1",""
"1",""
"1",""
"1","
"
